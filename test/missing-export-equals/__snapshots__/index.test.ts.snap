// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should be able to ignore rule missing-export-equals 1`] = `
[
  "[arethetypeswrong] test-missing-export-equals v0.0.0

 (ignoring rules: 'missing-export-equals')

 No problems found 🌟
┌───────────────────┬──────────────────────────────┐
│                   │ "test-missing-export-equals" │
├───────────────────┼──────────────────────────────┤
│ node10            │ 🟢                           │
├───────────────────┼──────────────────────────────┤
│ node16 (from CJS) │ 🟢 (CJS)                     │
├───────────────────┼──────────────────────────────┤
│ node16 (from ESM) │ 🟢 (CJS)                     │
├───────────────────┼──────────────────────────────┤
│ bundler           │ 🟢                           │
└───────────────────┴──────────────────────────────┘",
]
`;

exports[`should throw when missing export = 2`] = `
[
  "[arethetypeswrong] test-missing-export-equals v0.0.0

❓ The JavaScript appears to set both module.exports and module.exports.default for improved compatibility, but the types only reflect the latter (by using export default). This will cause TypeScript under the node16 module mode to think an extra .default property access is required, which will work at runtime but is not necessary. These types should export = an object with a default property instead of using export default. https://github.com/arethetypeswrong/arethetypeswrong.github.io/blob/main/docs/problems/MissingExportEquals.md


┌───────────────────┬──────────────────────────────┐
│                   │ "test-missing-export-equals" │
├───────────────────┼──────────────────────────────┤
│ node10            │ ❓ Missing \`export =\`        │
├───────────────────┼──────────────────────────────┤
│ node16 (from CJS) │ ❓ Missing \`export =\`        │
├───────────────────┼──────────────────────────────┤
│ node16 (from ESM) │ ❓ Missing \`export =\`        │
├───────────────────┼──────────────────────────────┤
│ bundler           │ ❓ Missing \`export =\`        │
└───────────────────┴──────────────────────────────┘",
]
`;
